{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\n\nstartButton.disabled = true;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (Date.now() > selectedDates[0].getTime()) {\n      startButton.disabled = true;\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        backgroundColor: 'tomato',\n        messageColor: 'white',\n        iconUrl: './../img/cancel.png',\n      });\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  value = String(value);\n\n  return value.padStart(2, 0);\n}\n\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsEleent = document.querySelector('[data-seconds]');\n\nstartButton.addEventListener('click', handleStartClick);\n\nlet intervalId;\n\nfunction handleStartClick(event) {\n  clearInterval(intervalId);\n  event.currentTarget.disabled = true;\n  let time = userSelectedDate.getTime() - Date.now();\n  intervalId = setInterval(() => {\n    if (time >= 1000) {\n      time -= 1000;\n      let timeObj = convertMs(time);\n\n      daysElement.textContent = addLeadingZero(timeObj.days);\n      hoursElement.textContent = addLeadingZero(timeObj.hours);\n      minutesElement.textContent = addLeadingZero(timeObj.minutes);\n      secondsEleent.textContent = addLeadingZero(timeObj.seconds);\n    }\n  }, 1000);\n}\n"],"names":["startButton","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","daysElement","hoursElement","minutesElement","secondsEleent","handleStartClick","intervalId","event","time","timeObj"],"mappings":"2GAKkB,SAAS,cAAc,kBAAkB,EAC3D,MAAMA,EAAc,SAAS,cAAc,cAAc,EAEzDA,EAAY,SAAW,GAEvB,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjB,KAAK,IAAK,EAAGA,EAAc,CAAC,EAAE,WAChCH,EAAY,SAAW,GACvBI,EAAS,KAAK,CACZ,QAAS,qCACT,gBAAiB,SACjB,aAAc,QACd,QAAS,qBACjB,CAAO,IAEDJ,EAAY,SAAW,GACvBC,EAAmBE,EAAc,CAAC,EAErC,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAAA,EAAQ,OAAOA,CAAK,EAEbA,EAAM,SAAS,EAAG,CAAC,CAC5B,CAEA,MAAMC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAgB,SAAS,cAAc,gBAAgB,EAE7DjB,EAAY,iBAAiB,QAASkB,CAAgB,EAEtD,IAAIC,EAEJ,SAASD,EAAiBE,EAAO,CAC/B,cAAcD,CAAU,EACxBC,EAAM,cAAc,SAAW,GAC/B,IAAIC,EAAOpB,EAAiB,QAAO,EAAK,KAAK,IAAK,EAClDkB,EAAa,YAAY,IAAM,CAC7B,GAAIE,GAAQ,IAAM,CAChBA,GAAQ,IACR,IAAIC,EAAUhB,EAAUe,CAAI,EAE5BP,EAAY,YAAcF,EAAeU,EAAQ,IAAI,EACrDP,EAAa,YAAcH,EAAeU,EAAQ,KAAK,EACvDN,EAAe,YAAcJ,EAAeU,EAAQ,OAAO,EAC3DL,EAAc,YAAcL,EAAeU,EAAQ,OAAO,CAChE,CACG,EAAE,GAAI,CACT"}